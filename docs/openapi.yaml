openapi: 3.0.0
info:
  title: Securing Web API
  description: How to efficiently secure web API against denial-of-service attacks
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
paths:
  /products/details:
    get:
      summary: Retrieve product details
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    description:
                      type: string
  /products/prices:
    get:
      summary: Retrieve product prices
      responses:
        '200':
          description: A list of product prices
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    price:
                      type: number
  /products/admin/prices:
    post:
      summary: Update product prices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  price:
                    type: number
      responses:
        '200':
          description: Prices updated successfully
  /products/catalog/{country}:
    get:
      summary: Retrieve product catalog by country
      parameters:
        - in: path
          name: country
          schema:
            type: string
          required: true
          description: Country code
      responses:
        '200':
          description: Product catalog
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
  /orders:
    get:
      summary: Get customer orders
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    customerId:
                      type: integer
                    address:
                      type: string
                    total:
                      type: number
                    orderDate:
                      type: string
                      format: date-time
    post:
      summary: Create a customer order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      quantity:
                        type: integer
      responses:
        '200':
          description: Order created successfully
  /reports:
    get:
      summary: Generate reports
      responses:
        '200':
          description: Report data
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalOrders:
                    type: integer
                  totalRevenue:
                    type: number
                  totalCustomers:
                    type: integer
  /support/messages:
    post:
      summary: Send a message to customer support
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                sender:
                  type: string
      responses:
        '200':
          description: Message sent successfully
